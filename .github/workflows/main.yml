name: Deploy App

on:
  pull_request:
    branches:
      - deploy
  workflow_dispatch:
    inputs:
      environment:
        description: "Select the environment"
        required: true
        default: "Dev"
        options:
          - Dev
          - QA
          - Production

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'Dev' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Execute SSH commands
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            APP_DIR=$HOME/${{ secrets.APP_DIR }}
            cd $APP_DIR
            LOG_FILE="$APP_DIR/deployment_$(date '+%Y-%m-%d_%H-%M-%S').log"
            {
              echo "üöÄ Pulling latest changes..."
              git pull origin main &&
              echo "üì¶ Installing dependencies..."
              composer install --no-dev --optimize-autoloader &&
              composer update --no-dev &&
              echo "üîÑ Running migrations..."
              php artisan migrate --force &&
              echo "üßπ Clearing and caching Laravel config..."
              php artisan config:clear &&
              php artisan config:cache &&
              php artisan route:clear &&
              php artisan route:cache &&
              php artisan view:clear &&
              php artisan view:cache &&
              php artisan cache:clear
            } > $LOG_FILE 2>&1 || {
              echo "‚ùå An error occurred during deployment. See $LOG_FILE for details."
              exit 1
            }

  karate-tests:
    needs: deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout el c√≥digo
        uses: actions/checkout@v3

      - name: Configurar JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Configurar Cach√© de Gradle (Opcional, mejora velocidad)
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Dar permisos a `gradlew`
        working-directory: Karate/Agenda
        run: chmod +x gradlew

      - name: Instalar dependencias y compilar con Gradle
        working-directory: Karate/Agenda
        run: ./gradlew build --no-daemon

      - name: Ejecutar Pruebas de Karate con Gradle
        working-directory: Karate/Agenda
        run: ./gradlew test --no-daemon

      - name: Publicar Reportes de Pruebas (Opcional)
        if: failure() || success()
        uses: actions/upload-artifact@v4
        with:
          name: karate-reports
          path: Karate/Agenda/build/reports/tests/test/
